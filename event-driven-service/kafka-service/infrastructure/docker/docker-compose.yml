version: "3.7"

services:
  zookeeper:
    restart: always
    container_name: MD-PROJECT-KAFKA-ZOOKEEPER
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
 
  kafka:
    restart: always
    container_name: MD-PROJECT-KAFKA
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
  
  kafka-topics-setup:
    container_name: MD-PROJECT-KAFKA-TOPICS-SETUP
    image: docker.io/bitnami/kafka:3.3
    depends_on:
      - kafka
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        until kafka-topics.sh --list --bootstrap-server kafka:9092 &>/dev/null; do
          echo 'Kafka not ready yet... waiting 5 seconds'
          sleep 5
        done &&
        echo 'Kafka is ready!' &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic OrderCreatedEvent &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic OrderUpdateStatusEvent &&

        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic InventoryOutBoundQuantityEvent &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic InventoryInBoundQuantityEvent &&

        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic ProductCreatedEvent &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic ProductUpdateEvent &&
        echo 'Topics created successfully!'
      "

volumes:
  kafka-volume:
  zookeeper-volume:










